---
# file: roles/docker-openldap/tasks/restore.yaml

# *****************************************************************************
# Setup the directory where the backup and restore is to take place

- name: restore dir
  file:
    state: directory
    path: '{{ openldap_docker_restore_dir }}'
    owner: root
    group: tape
    mode: 'u=rwx,g=rwx,o=rx'
    recurse: no
    setype: svirt_sandbox_file_t

# *****************************************************************************
# Get data from tape

- name: find files
  files_in_dir:
    path: '{{ openldap_docker_restore_dir }}'
  register: openldap_backup

- name: Get data-volume data from tape
  bacula:
    command: restore
    storage: '{{ bacula_storage }}'
    fileset: '{{ bacula_fileset }}'
    dest: '{{ bacula_dest }}'
    path_to_restore: '{{ openldap_docker_backup_dir }}'
  when: openldap_backup.file_list == []

- name: Set permissions for data-volume data
  file:
    path: '{{ openldap_docker_restore_dir }}/{{ item.ldif_file }}'
    state: touch
    owner: root
    group: root
    mode: 'u=rw,g=rw,o='
  with_items: '{{ openldap_backup_files }}'

# *****************************************************************************
# restore the openldap backup

- name: stop container (ldap)
  docker_container:
    name: '{{ openldap_container_name }}'
    state: stopped

- name: load ldif files
  docker_container:
    name: '{{ openldap_container_name }}-restore-{{ item.dbnum }}'
    cleanup: true
    command: ['apply_ldif', '-n', '{{ item.dbnum }}', '-l', '{{ item.ldif_file }}']
    detach: false
    image: '{{ openldap_image_name }}:{{ docker_image_tag }}'
    volumes:
    - '{{ openldap_docker_restore_dir }}:/tmp/import_export:z'
    volumes_from:
    - '{{ openssl_dv_name }}'
  with_items: '{{ openldap_backup_files }}'

- name: restart container (ldap)
  docker_container:
    name: '{{ openldap_container_name }}'
    state: started

# *****************************************************************************
# cleanup

- name: Remove database backup file
  file:
    path: '{{ openldap_docker_restore_dir }}'
    state: absent

- name: State file
  shell: 'date --rfc-3339=seconds > {{ docker_restore_config_base_dir }}/{{ openldap_dv_name }}/restore.date.txt'
  when: st_openldap_restore.stat.exists == False
